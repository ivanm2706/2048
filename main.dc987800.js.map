{"version":3,"sources":["scripts/main.js"],"names":["startGamePress","buttonStart","document","querySelector","tableBody","score","message","querySelectorAll","lose","win","gameField","children","map","el","fieldTurnRows","reduce","acc","curr","i","length","push","reversField","rev","reverse","reversFieldTurnRows","startGame","eventStart","currentTarget","classList","remove","add","textContent","forEach","m","removeStyleCell","clearCell","fillRandomCell","moveItem","eventKey","preventDefault","isMove","includes","key","move","Error","gameOver","field","isMoveCell","e","j","target","mergeMove","targ","cell","className","addScore","random2And4","arrNum","fill","Math","round","random","getRandom","max","min","floor","emptyCells","flat","filter","addStyleCell","row","a","num","over","addEventListener","window"],"mappings":"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","file":"main.dc987800.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst buttonStart = document.querySelector('.button--start');\r\nconst tableBody = document.querySelector('tbody');\r\nconst score = document.querySelector('.game-score');\r\nconst message = document.querySelectorAll('[data-message]');\r\n\r\nconst [lose, win] = message;\r\nconst gameField = [...tableBody.children].map(el => [...el.children]);\r\nconst fieldTurnRows = gameField.reduce((acc, curr) => {\r\n  for (let i = 0; i < curr.length; i++) {\r\n    acc[i].push(curr[i]);\r\n  }\r\n\r\n  return acc;\r\n}, [[], [], [], []]);\r\nconst reversField = gameField.map(rev => [...rev].reverse());\r\nconst reversFieldTurnRows = fieldTurnRows.map(rev => [...rev].reverse());\r\nlet startGamePress;\r\n\r\nbuttonStart.addEventListener('click', startGame);\r\nwindow.addEventListener('keyup', moveItem);\r\n\r\nfunction startGame(eventStart) {\r\n  startGamePress = true;\r\n  eventStart.currentTarget.classList.remove('button--start');\r\n  eventStart.currentTarget.classList.add('button--restart');\r\n  eventStart.currentTarget.textContent = 'restart';\r\n  score.textContent = 0;\r\n  message.forEach(m => m.classList.add('hidden'));\r\n\r\n  removeStyleCell();\r\n  clearCell();\r\n  fillRandomCell(true);\r\n  fillRandomCell(true);\r\n}\r\n\r\nfunction moveItem(eventKey) {\r\n  eventKey.preventDefault();\n\r\n  let isMove = false;\r\n\r\n  const arrKey = ['ArrowUp', 'ArrowDown', 'ArrowRight', 'ArrowLeft'];\r\n\r\n  if (!arrKey.includes(eventKey.key) || !startGamePress) {\r\n    return;\r\n  }\r\n\r\n  switch (eventKey.key) {\r\n    case 'ArrowUp':\r\n      isMove = move(fieldTurnRows);\r\n      break;\r\n    case 'ArrowDown':\r\n      isMove = move(reversFieldTurnRows);\r\n      break;\r\n    case 'ArrowRight':\r\n      isMove = move(reversField);\r\n      break;\r\n    case 'ArrowLeft':\r\n      isMove = move(gameField);\r\n      break;\r\n    default:\r\n      throw Error('key no move');\r\n  }\r\n\r\n  const state = fillRandomCell(isMove);\r\n\r\n  if (!state) {\r\n    gameOver(score.textContent, true);\r\n  }\r\n}\r\n\r\nfunction move(field) {\r\n  let isMoveCell = false;\r\n\r\n  field.forEach(e => {\r\n    for (let i = 1; i < e.length; i++) {\r\n      if (e[i].textContent === '') {\r\n        continue;\r\n      }\r\n\r\n      let target;\r\n      let j = i - 1;\r\n\r\n      while (\r\n        j >= 0\r\n        && (e[j].textContent === ''\r\n        || e[j].textContent === e[i].textContent)\r\n      ) {\r\n        target = e[j];\r\n        j--;\r\n      }\r\n\r\n      if (!target) {\r\n        continue;\r\n      }\r\n\r\n      isMoveCell = mergeMove(target, e[i]);\r\n    }\r\n  });\r\n\r\n  return isMoveCell;\r\n}\r\n\r\nfunction mergeMove(targ, cell) {\r\n  if (targ.textContent === '') {\r\n    targ.textContent = cell.textContent;\r\n    cell.textContent = '';\r\n    cell.className = 'field-cell';\r\n\r\n    return true;\r\n  }\r\n\r\n  if (targ.textContent === cell.textContent) {\r\n    targ.textContent = cell.textContent * 2;\r\n    cell.textContent = '';\r\n    cell.className = 'field-cell';\r\n\r\n    gameOver(addScore(targ.textContent));\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction random2And4() {\r\n  const arrNum = [4];\r\n\r\n  arrNum.length = 10;\r\n  arrNum.fill(2, 1);\r\n\r\n  return arrNum[Math.round(Math.random())];\r\n}\r\n\r\nfunction getRandom(max, min = 0) {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nfunction fillRandomCell(isMove) {\r\n  const emptyCells = [...gameField]\r\n    .flat()\r\n    .filter(cell => !cell.textContent);\r\n\r\n  if (emptyCells.length === 0) {\r\n    return false;\r\n  }\r\n\r\n  if (isMove) {\r\n    emptyCells[getRandom(emptyCells.length)].textContent = random2And4();\r\n    addStyleCell();\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction clearCell() {\r\n  gameField.forEach(row => {\r\n    row.forEach(cell => {\r\n      cell.textContent = '';\r\n    });\r\n  });\r\n}\r\n\r\nfunction removeStyleCell() {\r\n  gameField.forEach(e => {\r\n    e.forEach(a => {\r\n      if (a.textContent !== '') {\r\n        a.className = 'field-cell';\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction addStyleCell() {\r\n  gameField.forEach(e => {\r\n    e.forEach(a => {\r\n      if (a.textContent !== '') {\r\n        a.classList.add(`field-cell--${a.textContent}`);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction addScore(num = 0) {\r\n  score.textContent = +score.textContent + +num;\r\n\r\n  return +score.textContent + +num;\r\n}\r\n\r\nfunction gameOver(num, over = false) {\r\n  if (+num >= 2048) {\r\n    win.classList.remove('hidden');\r\n    startGamePress = false;\r\n\r\n    return;\r\n  }\r\n\r\n  if (over) {\r\n    lose.classList.remove('hidden');\r\n    startGamePress = false;\r\n  }\r\n}\r\n"]}